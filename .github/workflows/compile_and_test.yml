name: Build and Test

on:
  push:    
    paths:
      - 'src/**'
      - '.github/workflows/**'
      - 'Cargo.toml'
    branches:
      - '**'
    tags-ignore:
      - '*.*.*'
  pull_request:    
    paths:
      - 'src/**'
      - '.github/workflows/**'
      - 'Cargo.toml'
    branches:
      - '**'
    tags-ignore:
      - '*.*.*'    

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis:alpine
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # Label used to access the service container
      redis-tls:
        # Docker Hub image
        image: docker.io/bitnami/redis
        env:
          ALLOW_EMPTY_PASSWORD: false
          REDIS_PASSWORD: pwd
          REDIS_TLS_CERT_FILE: /certs/redis.crt
          REDIS_TLS_KEY_FILE: /certs/redis.key
          REDIS_TLS_CA_FILE: /certs/ca.crt
          REDIS_TLS_ENABLED: yes
          REDIS_TLS_PORT: 6379
          REDIS_TLS_AUTH_CLIENTS: no
        ports:
          - 6380:6379
        volumes:
          - certs:/certs

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features pool,tokio-tls
